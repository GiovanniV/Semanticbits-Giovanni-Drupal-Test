<?php

/**
 * @file
 * Tests for semanticbits module.
 */

/**
 * Test semanticbits mail functionality.
 */
class semanticbitsBlockTest extends DrupalWebTestCase {
  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'Today Modifield Block Available Check',
      'description' => 'Today Modifield Block Available Check',
      'group' => 'Semanticbits',
    );
  }
  
  /**
   * {@inheritdoc}
   */
  public function setUp() {
    parent::setUp(['semanticbits', 'block']);
    
    $this->admin_user = $this->drupalCreateUser(array('administer blocks'));
    $this->web_user = $this->drupalCreateUser(array('view today modified pages'));
    
  }
  
  /**
   * Make sure the Block Available.
   */
  public function testTodayModifiedPagesBlock() {
    $this->drupalLogin($this->admin_user);
    
    $edit = array();
    $edit['blocks[semanticbits_today_modified_pages][region]'] = 'content';
    $this->drupalPost('admin/structure/block', $edit, t('Save blocks'));
    $this->assertResponse(200);
    $this->assertText(t('The block settings have been updated.'), 'Block successfully move to main content region.');
    
    // Create Node
    $node_1 = $this->drupalCreateNode(array('type' => 'article', 'status' => 1));
    $node_2 = $this->drupalCreateNode(array('type' => 'article', 'status' => 0));
    $node_3 = $this->drupalCreateNode(array('type' => 'article'));
    $node_4 = $this->drupalCreateNode(array('type' => 'article'));
    
		db_update('node')
      ->fields(array(
        'changed' => time(),
      ))
      ->condition('nid', $node_3->nid)
      ->execute();
			
		db_update('node')
      ->fields(array(
        'changed' => $node_4->changed + 86400,
      ))
      ->condition('nid', $node_4->nid)
      ->execute();	
		
    $this->drupalLogin($this->web_user);   
    $this->drupalGet('<front>');
		$this->assertText($node_1->title, 'Node found');
    $this->assertNoText($node_2->title, 'Node not found');
    $this->assertText($node_3->title, 'Node found');
    $this->assertNoText($node_4->title, 'Node not found');
    
    $this->clickLink(t('Full View'));
    $this->assertResponse(200);
    
		$this->assertText($node_1->title, 'Node found');
    $this->assertNoText($node_2->title, 'Node not found');
    $this->assertText($node_3->title, 'Node found');
    $this->assertNoText($node_4->title, 'Node not found');
  }
  
}

/**
 * Test semanticbits mail functionality.
 */
class semanticbitsPageTest extends DrupalWebTestCase {
  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'Today Modifield Page Available Check',
      'description' => 'Today Modifield Block Available Check',
      'group' => 'Semanticbits',
    );
  }
  
  /**
   * {@inheritdoc}
   */
  public function setUp() {
    parent::setUp(array('semanticbits'));
    $web_user = $this->drupalCreateUser(array('view today modified pages'));
    $this->drupalLogin($web_user);
  }
  
  /**
   * Make sure Page Available.
   */
  public function testTodayModifiedPagesMenu() {
    
    // Create Node
    $node_1 = $this->drupalCreateNode(array('type' => 'article', 'status' => 1));
    $node_2 = $this->drupalCreateNode(array('type' => 'article', 'status' => 0));
    $node_3 = $this->drupalCreateNode(array('type' => 'page'));
    $node_4 = $this->drupalCreateNode(array('type' => 'page'));
    
		db_update('node')
      ->fields(array(
        'changed' => time(),
      ))
      ->condition('nid', $node_3->nid)
      ->execute();
			
		db_update('node')
      ->fields(array(
        'changed' => $node_4->changed + 86400,
      ))
      ->condition('nid', $node_4->nid)
      ->execute();	
			
    $this->drupalGet('today-modified-pages');
    $this->assertResponse(200);
      
    $this->assertText($node_1->title, 'Node found');
    $this->assertNoText($node_2->title, 'Node not found');
    $this->assertText($node_3->title, 'Node found');
    $this->assertNoText($node_4->title, 'Node not found');
  }
}
